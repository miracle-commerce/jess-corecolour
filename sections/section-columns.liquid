{%- liquid
  assign unique = section.id
  assign bg_color_secondary = section.settings.bg_color_secondary
  assign section_width = section.settings.width
  assign equalize_height = section.settings.equalize_height
  assign columns = section.settings.columns
  assign heading_size = section.settings.heading_size | times: 0.01
  assign text_size = section.settings.text_size | times: 0.01
  assign show_images = section.settings.show_images
  assign aspect_ratio = section.settings.image_aspect_ratio

  case columns
    when 2
      assign item_width = 'one-half mobile--one-whole'
    when 3
      assign item_width = 'one-third mobile--one-whole'
    else
      assign item_width = 'one-quarter mobile--one-whole'
  endcase

  assign animations_enabled = settings.animations_enabled
  assign animation_anchor = '#SectionColumns--' | append: unique
  assign animation_delay = 150
-%}

{%- style -%}
  #SectionColumns--{{ unique }} {
    --PT: {{ section.settings.padding_top }}px;
    --PB: {{ section.settings.padding_bottom }}px;
    --adjust-heading: calc(var(--FONT-ADJUST-HEADING) * {{ heading_size }});
  }
  #SectionColumns--{{ unique }} .column__item__text p { --adjust-body: calc(var(--FONT-ADJUST-BODY) * {{ text_size }}); }
{%- endstyle -%}

<div id="SectionColumns--{{ unique }}"
  class="section-padding section-columns {{ section.settings.align_text }}{% if bg_color_secondary %} bg-secondary{% endif %}"
  data-section-id="{{ unique }}"
  data-section-type="columns-with-image">
  <div class="{{ section_width }}">

    {%- if section.settings.title != '' -%}
      <div class="section__header">
        <h2 class="section__heading h2"
          data-aos="fade-up"
          data-aos-anchor="{{ animation_anchor }}"
          data-aos-delay="{{ animation_delay }}"
          {%- assign animation_delay = animation_delay | plus: 150 -%}>{{ section.settings.title }}</h2>

        {%- if settings.show_spacer_lines -%}
          <hr class="section__heading-line"{% if animations_enabled %}
            data-aos="fade-up"
            data-aos-anchor="{{ animation_anchor }}"
            data-aos-delay="{{ animation_delay }}"
            {%- assign animation_delay = animation_delay | plus: 150 -%}
          {% endif %}>
        {%- endif -%}
      </div>
    {%- endif -%}

    <div class="section-columns__wrapper carousel__container">
      {%- if section.blocks.size > 0 -%}
        <div class="section-columns__slider carousel carousel--mobile" data-slider>
          {%- for block in section.blocks -%}
            {%- liquid
              assign button_link = block.settings.button_link
              assign button_text = block.settings.button_text
              assign button_style = block.settings.button_style
              assign button_color = block.settings.button_color
              assign button_size = block.settings.button_size
              assign title = block.settings.title
              assign image = block.settings.image
              assign text = block.settings.text
              assign video_link = block.settings.video_link_popup
              assign unique = block.id
              assign video_link_color = block.settings.video_link_color
            -%}

            <div class="column__item carousel__item {{ item_width }}{%- render 'button-fallback-classes', primary_color: button_color, bg_color_secondary: bg_color_secondary -%}"
            {{ block.shopify_attributes }}
            data-slider-item>
              <div class="column__item__inner">
                {%- if show_images -%}
                  <div class="column__item__image-wrapper"
                    data-media-container
                    {% if animations_enabled %}
                      data-aos="fade-up"
                      data-aos-anchor="{{ animation_anchor }}"
                      data-aos-delay="{{ animation_delay }}"
                      {%- assign animation_delay = animation_delay | plus: 150 -%}
                    {% endif %}>
                    {%- if image != blank -%}
                      {%- liquid
                        assign image_alt = image.alt | default: title | strip_html | escape

                        if equalize_height == false
                          assign aspect_ratio = 1 | divided_by: image.aspect_ratio
                        endif
                      -%}

                      <div class="column__item__image lazy-image" style="padding-top: {{ aspect_ratio | times: 100 }}%; background-image: url('{{ image | img_url: '1x1' }}');">
                        {%- render 'image-fill', is_background: true, img_object: image, classes: 'column__item__image__bg', alt: image_alt -%}
                      </div>
                    {%- else -%}
                      {%- liquid
                        if equalize_height == false
                          assign aspect_ratio = 0.67
                        endif
                      -%}

                      <div class="column__item__image placeholder-svg--overlayed" style="padding-top: {{ aspect_ratio | times: 100 }}%;">
                        {{ 'image' | placeholder_svg_tag: 'placeholder-svg-filled column__item__image__bg' }}
                      </div>
                    {%- endif -%}

                    {%- if video_link != blank -%}{%- liquid
  assign video_link_downcase = video_link | downcase
  assign video_type = ''
  assign video_id = ''
  assign video_parent_id = 'item-video-' | append: unique

  if video_link contains "vimeo.com"
    assign video_type = "vimeo"
  elsif video_link contains "youtube.com"
    assign video_type = "youtube"
  elsif video_link contains "youtu.be"
    assign video_type = "youtube"
    assign youtubeShortlink = true
  elsif video_link_downcase contains ".mp4"
    assign video_type = "native"
  endif

  assign link_array = video_link | split: '/'
  assign id_with_params = link_array | last

  if video_type == "vimeo" or youtubeShortlink
  comment
    https://vimeo.com/[ID]?foo=bar&baz=boo
    https://youtu.be/[ID]?foo=bar&baz=boo
  endcomment
    assign starts_with_id = id_with_params | split: '?'
    assign video_id = starts_with_id | first
  elsif video_type == "youtube" 
  comment
    https://youtube.com/watch?v=[ID]?foo=bar&baz=boo
  endcomment
    assign first_param = id_with_params | split: '&' | first
    assign watch_then_id = first_param | split: '?'
    assign equals_id = watch_then_id[1]
    assign ends_with_id = equals_id | split: '='
    assign video_id = ends_with_id | last
  endif

  if video_type == 'youtube'
    capture video_link
      echo 'https://www.youtube.com/watch?v=' | append: video_id
    endcapture
  elsif video_type == 'vimeo'
    capture video_link
      echo 'https://vimeo.com/' | append: video_id
    endcapture
  endif
-%}<div class="column__item__video-link">
                        <a class="play-button {{ video_link_color }}" href="{{ video_link }}"
                          data-video-play="{%- render 'photoswipe-video-html' item_link: video_link , item_link_type: video_type, item_link_id: video_id, item_id: video_parent_id -%}">
                          {%- render 'icon-play' -%}
                        </a>
                      </div>
                    {%- endif -%}
                  </div>
                {%- endif -%}

                <div class="column__item__content"
                  {% if animations_enabled %}
                    data-aos="fade-up"
                    data-aos-anchor="{{ animation_anchor }}"
                    data-aos-delay="{{ animation_delay }}"
                  {% endif %}>
                  {%- if title != blank -%}
                    <h3 class="column__item__heading h6">{{ title | escape }}</h3>
                  {%- endif -%}

                  {%- if text != blank -%}
                    <div class="column__item__text">{{ text }}</div>
                  {%- endif -%}

                  {%- if button_text != '' -%}
                    <a href="{{ button_link }}" class="column__item__button btn {{ button_style }} {{ button_size }} {{ button_color }}">
                      {{- button_text -}}
                    </a>
                  {%- endif -%}
                </div>
              </div>
            </div>
          {%- endfor -%}
        </div>
      {%- endif -%}

      {%- if section.blocks.size == 0 -%}
        {%- render 'no-blocks' -%}
      {%- endif -%}
    </div>
  </div>
</div>

{% schema %}
  {
    "name": "Text columns with images",
    "class": "index-section",
    "settings": [
      {
        "type": "text",
        "id": "title",
        "label": "Heading"
      },
      {
        "type": "header",
        "content": "Layout"
      },
      {
        "type": "select",
        "id": "align_text",
        "label": "Text alignment",
        "default": "text-left",
        "options": [
          {
            "value": "text-left",
            "label": "Left"
          },
          {
            "value": "text-center",
            "label": "Centered"
          }
        ]
      },
      {
        "type": "range",
        "id": "columns",
        "label": "Columns per slide",
        "default": 3,
        "min": 2,
        "max": 4,
        "step": 1
      },
      {
        "type": "header",
        "content": "Height"
      },
      {
        "type": "checkbox",
        "id": "equalize_height",
        "label": "Equalize image heights",
        "default": true
      },
      {
        "type": "range",
        "id": "image_aspect_ratio",
        "min": 0.5,
        "max": 1.5,
        "step": 0.1,
        "unit": ":1",
        "label": "Photo height",
        "info": "Wide to tall",
        "default": 0.8
      },
      {
        "type": "checkbox",
        "id": "show_images",
        "label": "Show images",
        "default": true
      },
      {
        "type": "header",
        "content": "Text"
      },
      {
        "type": "range",
        "id": "heading_size",
        "label": "Heading size",
        "default": 120,
        "min": 70,
        "max": 200,
        "step": 10,
        "unit": "%"
      },
      {
        "type": "range",
        "id": "text_size",
        "label": "Text size",
        "default": 100,
        "min": 70,
        "max": 150,
        "step": 10,
        "unit": "%"
      },
      {
        "type": "header",
        "content": "Colors"
      },
      {
        "type": "checkbox",
        "id": "bg_color_secondary",
        "label": "Background",
        "info": "Use secondary background color",
        "default": false
      },
      {
        "type": "header",
        "content": "Section spacing"
      },
      {
        "type": "select",
        "id": "width",
        "label": "Width",
        "default": "wrapper",
        "options": [
          { "value": "wrapper--full-padded", "label": "Full width padded" },
          { "value": "wrapper", "label": "Page width" }
        ]
      },
      {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Padding top",
        "default": 60
      },
      {
        "type": "range",
        "id": "padding_bottom",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Padding bottom",
        "default": 60
      }
    ],
    "blocks": [
      {
        "type": "text_block",
        "name": "Column",
        "settings": [
          {
            "type": "image_picker",
            "id": "image",
            "label": "Image"
          },
          {
            "type": "text",
            "id": "title",
            "label": "Heading",
            "default": "Add a title or tagline"
          },
          {
            "type": "richtext",
            "id": "text",
            "label": "Text",
            "default": "<p>Use this text to describe products, share details on availability and style, etc</p>"
          },
          {
            "type": "header",
            "content": "Button"
          },
          {
            "type": "text",
            "id": "button_text",
            "label": "Text",
            "default": "Learn More"
          },
          {
            "type": "url",
            "id": "button_link",
            "label": "Link"
          },
          {
            "type": "select",
            "id": "button_color",
            "label": "Button color",
            "default": "btn--black",
            "options": [
              { "label": "Primary", "value": "btn--primary" },
              { "label": "Secondary", "value": "btn--secondary" },
              { "label": "White", "value": "btn--white" },
              { "label": "Black", "value": "btn--black" }
            ]
          },
          {
            "type": "select",
            "id": "button_style",
            "label": "Button style",
            "default": "btn--text",
            "options": [
              { "label": "Solid", "value": "btn--solid" },
              { "label": "Outline", "value": "btn--outline" },
              { "label": "Solid with border", "value": "btn--solid-border" },
              { "label": "Text", "value": "btn--text" }
            ]
          },
          {
            "type": "select",
            "id": "button_size",
            "label": "Size",
            "default": "btn--small",
            "options": [
              { "label": "Large", "value": "btn--large" },
              { "label": "Medium", "value": "btn--medium" },
              { "label": "Small", "value": "btn--small" }
            ]
          },
          {
            "type": "header",
            "content": "Video Popup"
          },
          {
            "type": "text",
            "id": "video_link_popup",
            "label": "Video link",
            "info": "Video links from YouTube, Vimeo or MP4 video link from [files](/admin/content/files?selectedView=all&media_type=VIDEO)"
          },
          {
            "type": "select",
            "id": "video_link_color",
            "label": "Color",
            "default": "text-dark",
            "options": [
              {
                "value": "text-light",
                "label": "Light"
              },
              {
                "value": "text-dark",
                "label": "Dark"
              }
            ]
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "Text columns with images",
        "category": "Text",
        "blocks": [
          {
            "type": "text_block"
          },
          {
            "type": "text_block"
          },
          {
            "type": "text_block"
          },
          {
            "type": "text_block"
          }
        ]
      }
    ],
    "disabled_on": {
      "groups": ["header","aside"]
    }
  }
{% endschema %}
