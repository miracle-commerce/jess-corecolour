{%- comment -%} /sections/collection.liquid {%- endcomment -%}

{%- liquid
  assign carousel = false
  assign collection_count = collection.all_products_count
  assign filter_mode = section.settings.filter_mode
  assign filter_by_tags = false
  assign enable_filters = section.settings.enable_filters
  assign filters_layout = section.settings.filters_layout
  assign show_more = section.settings.show_more

  assign columns_mobile = settings.products_per_row_on_mobile | plus: 0

  case columns_mobile
    when 1
      assign size_mobile = 'mobile--one-whole'
    when 2
      assign size_mobile = 'mobile--one-half'
  endcase

  if enable_filters
    if filter_mode == 'tag' or filter_mode == 'group'
      assign filter_by_tags = true
    endif
  endif

  if enable_filters and filter_by_tags
    for tag in current_tags
      unless tag contains '_badge' and tag contains '_preorder'
        assign current_tag_handle = tag | replace: '&#39;', '' | replace: '&#34;', '' | handle
        assign selected_tags = selected_tags | append: current_tag_handle
        unless forloop.last
          assign selected_tags = selected_tags | append: '+'
        endunless
      endunless
    endfor
  endif

  assign columns = settings.products_per_row_on_desktop | plus: 0
  assign enable_sorting = section.settings.enable_sorting
  assign enable_infinity_scroll = settings.enable_infinity_scroll
  assign pagination_limit = columns | times: 12
  assign show_breadcrumbs = section.settings.show_breadcrumbs
  assign bg_color = section.settings.bg_color
  assign products_count = 'products.general.products_with_count' | t: count: collection.products_count

  assign section_class = 'collection collection-items section-padding'
  if enable_filters == false and enable_sorting == false
    assign section_class = section_class | append: ' collection--filters-sorting-disabled'
  else
    if enable_filters == false
      assign section_class = section_class | append: ' collection--filters-disabled'
    elsif enable_sorting == false
      assign section_class = section_class | append: ' collection--sorting-disabled'
    endif
  endif

  unless show_breadcrumbs
    assign section_class = section_class | append: ' collection--breadcrumbs-disabled'
  endunless

  assign id = 'Collection--' | append: section.id
  assign selector_id = '#' | append: id
  assign animations_enabled = settings.animations_enabled
  assign animation_anchor = selector_id
  assign animation_delay = 150
  assign min_sticky_bar_gutter = 40
-%}

{%- style -%}
  :root {
    {%- comment -%}
      Collection sticky bar initial height which is dynamically changed on window load/resize.
      Setting the variable here is mostly helpful for no-js Collection filters positioning.
    {%- endcomment -%}
    {%- if show_breadcrumbs or enable_sorting or enable_filters -%}
      --collection-sticky-bar-height: calc(.75rem * var(--FONT-ADJUST-BODY) + {{ min_sticky_bar_gutter }}px);
    {%- endif -%}
  }

  {{ selector_id }} {
    --PT: {{ section.settings.padding_top }}px;
    --PB: {{ section.settings.padding_bottom }}px;
  }

  {%- if bg_color != 'rgba(0,0,0,0)' and bg_color != '' -%}
    .template-collection .collection-section {
      background-color: {{ bg_color }};
    }
    .collection__sticky-bar,
    .collection__filters {
      --bg: {{ bg_color }};
    }
  {%- endif -%}
{%- endstyle -%}

<div id="{{ id }}"
  class="{{ section_class }}"
  data-section-type="collection-template"
  data-section-id="{{ section.id }}"
  data-enable-filters="{{ enable_filters }}"
  data-enable-sorting="{{ enable_sorting }}"
  data-filters-default-state="{{ filters_layout }}"
  data-collapsible-transition-override
  data-filter-mode="{{ filter_mode }}"
  {% if filter_by_tags %}
    data-collection="{{ collection.url | default: routes.all_products_collection_url }}"
    data-tags="{{ selected_tags }}"
  {% endif %}>

  <div class="collection__wrapper" data-collection-wrapper>
    <div class="wrapper--full-padded">
      <div class="collection__inner">
        {%- if show_breadcrumbs or enable_filters or enable_sorting -%}
          <div id="CollectionStickyBar"
            class="collection__sticky-bar"
            data-collection-sticky-bar
            {% if animations_enabled %}
              data-aos="fade"
              data-aos-anchor="{{ animation_anchor }}"
              data-aos-delay="{{ animation_delay }}"
              {%- assign animation_delay = animation_delay | plus: 150 -%}
            {% endif %}>

            {%- if show_breadcrumbs -%}
              {%- render 'breadcrumbs' -%}
            {%- endif -%}

            {%- if enable_sorting -%}          {%- assign sort_by = search.sort_by | default: collection.sort_by | default: collection.default_sort_by -%}
          {%- assign sort_options = search.sort_options | default: collection.sort_options -%}

          <div class="collection__sort-bar">
            <button type="button" class="collection__sort__label" data-sort-toggle>
              {{ 'collections.sorting.title' | t }}
              {%- render 'icon-select' -%}
            </button>

            <div class="collection__sort__option-wrapper" data-collection-sort-options>
              <div class="collection__sort__options">
                <ul class="collection__filter-tags collection__filter-tags--default" collection-sort-by="{{ sort_by }}">
                  {%- for option in sort_options -%}
                    <li class="collection__filter-tag">
                      <input class="collection__sort__input" type="radio" name="sort_by_bar" value="{{ option.value }}" id="filter-bar-{{ option.name | handle | append: option.value | handle | append: section.id }}" data-input-sort{% if option.value == sort_by %} checked{% endif %}>
                      <label class="collection__sort__button" for="filter-bar-{{ option.name | handle | append: option.value | handle | append: section.id }}" tabindex="0">
                        {{- option.name -}}
                      </label>
                    </li>
                  {%- endfor -%}
                </ul>

                <noscript>
                  <button type="submit" class="btn btn--primary btn--solid">{{ 'collection.filters.sort_button' | t }}</button>
                </noscript>
              </div>
            </div>
          </div>{%- endif -%}

            <div class="collection__products-count" data-products-count="{{ products_count }}">
              {{- products_count -}}
            </div>

            {%- if enable_filters or enable_sorting -%}
              <button class="collection__filters__toggle" aria-label="{{ 'products.general.filters' | t }}" data-toggle-filters>
                {%- render 'icon-filter' -%}
              </button>
            {%- endif -%}
          </div>

          {%- if enable_filters or enable_sorting -%}{%- liquid
  assign filters_available = false
  assign filter_count = 0
  assign all_active_tags_count = 0
  assign heading_style = section.settings.heading_style

  capture sort_param
    if collection.sort_by != collection.default_sort_by
      echo '?sort_by=' | append: collection.sort_by
    endif
  endcapture
-%}

{%- capture filters -%}
  {%- case filter_mode -%}

    {%- when 'default' -%}
      {%- liquid
        if collection.filters != empty
          assign filters_available = true
        endif

        for filter in collection.filters
          render 'filter', filter: filter, animation_delay: animation_delay, filters_layout: filters_layout, index: forloop.index, show_more: show_more, heading_style: heading_style
        endfor
      -%}

      <noscript>
        <button type="submit" class="btn btn--primary btn--solid">{{ 'collection.filters.filter_button' | t }}</button>
      </noscript>

    <!-- By Joey Clarin - Custom Device Filter -->
    {% if collection.metafields.custom.filter_devices.value != blank%}
    <div class="cc-custom-device-filter">
      <h3 class="collection__filter__title--body">Device</h3>
      <ul class="collection__filter-tags">
      {% for item in collection.metafields.custom.filter_devices.value %}
        {% assign cc_checked = '' %}
        {% if item.metafields.custom.filter_value.value != blank and item.all_products_count != 0 %}
          {% if item.metafields.custom.filter_value.value == collection.metafields.custom.filter_value %}
            {% assign cc_checked = 'checked' %}
          {% endif %}
          <li class="collection__filter-tag">
            <a class="filter__button {{ cc_checked }}" href="{{ item.url }}">{{ item.metafields.custom.filter_value.value }}</a>
          </li>
        {% endif %}
      {% endfor %}
      </ul>
    </div>
    {% endif %}
      
    {%- when 'tag' -%}
      {%- liquid
        assign is_active = false
        assign active_count = 0
        assign active_tag_filters = ''
        assign tags_list = ''
        assign filters_counter = 0
        assign filters_markup_first_part = ''
        assign filters_markup_the_rest = ''
        assign show_more_active_filters_counter = 0
        assign count_threshold = 10

        for tag in collection.all_tags
          assign filters_available = true
          unless tag contains '_badge' or tag contains '_preorder'
            if current_tags contains tag
              assign is_active = true
              assign active_count = active_count | plus: 1
              assign all_active_tags_count = all_active_tags_count | plus: 1
            endif
          endunless
        endfor

        assign toggle_state = true

        if filters_layout == 'closed'
          assign toggle_state = false
        endif

        if is_active
          assign toggle_state = true
        endif

        capture filters_list_class
          echo 'collection__filter-tags'
          if is_color
            echo ' collection__filter-tags--swatches' | append: ' collection__filter-tags--swatches-' | append: settings.color_swatches_product_style
          endif
        endcapture
      -%}

      <div class="collection__filter"{% if show_more %} data-show-more{% endif %} data-collection-filter>
        <button type="button" class="collection__filter__title{% if heading_style == 'body' %} collection__filter__title--body{% endif %}{% if toggle_state %} is-expanded{% endif %}"
          aria-expanded="{{ toggle_state }}"
          aria-controls="CollectionFilter--tags"
          data-filter-active="{{ is_active }}"
          data-collapsible-trigger>

          {{- 'products.general.filter_by' | t -}}

          <span class="collection__filter__count">
            {%- render 'icon-toggle-plus' -%}
            {%- render 'icon-toggle-minus' -%}
          </span>
        </button>

        <div id="CollectionFilter--tags"
          class="collection__filter-tags-wrapper{% if toggle_state %} is-expanded{% endif %}"
          aria-expanded="{% if toggle_state %}true{% else %}false{% endif %}"
          data-collapsible-container
          {% if toggle_state %}style="height:auto;"{% endif %}>
          <ul class="{{ filters_list_class }}" data-collapsible-content>
            {%- for tag in collection.all_tags -%}
              {%- unless tags_list contains tag or tag contains '_badge' or tag contains '_preorder' -%}
                {%- capture temp_list -%}{{ tags_list | append: tag | append: ' ' }}{%- endcapture -%}
                {%- liquid
                  assign tags_list = temp_list
                  assign current_tag_handle = tag | replace: '&#39;', '' | replace: '&#34;', '' | handle

                  if current_tags contains tag
                    assign linked_tags = selected_tags | remove: current_tag_handle
                    assign filter_count = filter_count | plus: 1
                  else
                    assign linked_tags = selected_tags | append: '+' | append: current_tag_handle
                  endif

                  capture tag_link
                    echo collection.url
                    if linked_tags != blank
                      echo '/' | append: linked_tags
                    endif
                    echo sort_param
                  endcapture

                  assign tag_link = tag_link | replace: '/+', '/' | replace: '++', '+' | replace: '+?', '?'

                  capture filter_classes
                    echo 'collection__filter-tag collection__filter-tag--default'
                    if current_tags contains tag
                      echo ' is-active'
                    endif
                  endcapture
                -%}

                {%- capture current_filter -%}
                  <li class="{{ filter_classes }}" data-collection-filter-tag>
                    <a href="{{ tag_link }}"
                      class="filter__button"
                      data-tag="{{ tag | handleize }}"
                      data-collection-filter-tag-button>
                      {{ tag }}
                    </a>
                  </li>
                {%- endcapture -%}

                {%- liquid
                  assign filters_counter = filters_counter | plus: 1
                  if filters_counter <= count_threshold
                    assign filters_markup_first_part = filters_markup_first_part | append: current_filter
                  else
                    assign filters_markup_the_rest = filters_markup_the_rest | append: current_filter
                    if current_tags contains tag
                      assign show_more_active_filters_counter = show_more_active_filters_counter | plus: 1
                    endif
                  endif
                -%}

                {%- if current_tags contains tag -%}
                  {%- capture active_tag_filters -%}
                    {{- active_tag_filters -}}
                    <a class="filter__active__remove" href="{{ tag_link }}" data-tag="{{ tag | handleize }}" data-filter-tag-reset-button>
                      {{ tag }}
                      <span class="filter__x">✕</span>
                    </a>
                  {%- endcapture -%}
                {%- endif -%}
              {%- endunless -%}
            {%- endfor -%}

            {%- if show_more -%}
              {{- filters_markup_first_part -}}

              {%- if filters_markup_the_rest != '' -%}
                {%- liquid
                  assign open_show_more = false
                  if show_more_active_filters_counter > 0
                    assign open_show_more = true
                  endif
                -%}
                <li class="collection__filter-actions" data-show-more-actions>
                  <div id="CollectionFilterActions--tags"
                    class="collection__filter-actions-container{% if open_show_more %} is-expanded{% endif %}"
                    data-collapsible-container
                    data-show-more-container
                    aria-expanded="{{ open_show_more }}"
                    {% if open_show_more %} style="height:auto;"{% endif %}>
                    <ul class="{{ filters_list_class }}" data-collapsible-content>
                      {{- filters_markup_the_rest -}}
                    </ul>
                  </div>

                  <button type="button"
                    class="collection__filters-more btn btn--text{% if open_show_more %} is-expanded{% endif %}"
                    aria-expanded="{{ open_show_more }}"
                    aria-controls="CollectionFilterActions--tags"
                    data-collapsible-trigger
                    data-show-more-trigger>
                    <span>{{ 'collection.filters.show_more' | t }}</span>
                    <span>{{ 'collection.filters.show_less' | t }}</span>
                  </button>
                </li>
              {%- endif -%}

            {%- else -%}
             {{- filters_markup_first_part -}}
             {{- filters_markup_the_rest -}}
            {%- endif -%}
          </ul>
        </div>
      </div>

    {%- when 'group' -%}
      {%- liquid
        assign groups = ''
        assign active_tag_filters = ''

        for tag in collection.all_tags
          assign tag_parts = tag | split: '_'

          if tag_parts.size == 2
            assign groups = groups | append: tag_parts.first | append: ','
          endif
        endfor

        assign groups = groups | split: ',' | compact | uniq
        assign color_label = 'color,colour,couleur,colore,farbe,색,色,färg,farve' | split: ','

        comment
          These tags will be hidden from the Filters
        endcomment
        assign special_tags = '_preorder,_badge' | split: ','
      -%}

      {%- for group in groups -%}
        {%- liquid
          assign filters_counter = 0
          assign filters_markup_first_part = ''
          assign filters_markup_the_rest = ''
          assign show_more_active_filters_counter = 0
          assign is_active = false
          assign active_count = 0
          assign group_label = group | downcase
          assign group_with_suffix = group | append: '_'

          comment
            group_with_suffix is needed in order to avoid edge cases where group tags contain the same words
            For example:
            Color_Metalic
            Metalic_Yes
          endcomment
        -%}

        {%- comment -%} Don't show "_badge" and "_preorder" as filters {%- endcomment -%}
        {%- unless special_tags contains group_label or group_label == blank -%}
          {%- liquid
            assign filters_available = true
            for tag in current_tags
              if tag contains group_with_suffix
                assign is_active = true
                assign active_count = active_count | plus: 1
                assign all_active_tags_count = all_active_tags_count | plus: 1
              endif
            endfor

            assign toggle_state = false
            case filters_layout
              when 'open'
                assign toggle_state = true
              when 'first-open'
                if forloop.index == 1
                  assign toggle_state = true
                endif
            endcase

            if is_active
              assign toggle_state = true
            endif

            if color_label contains group_label and settings.enable_color_swatches_collection
              assign is_color = true
            else
              assign is_color = false
            endif

            assign count_threshold = 10
            if is_color
              assign count_threshold = 20
            endif

            capture filters_list_class
              echo 'collection__filter-tags'
              if is_color
                echo ' collection__filter-tags--swatches' | append: ' collection__filter-tags--swatches-' | append: settings.color_swatches_product_style
              endif
            endcapture
          -%}

          <div class="collection__filter"{% if show_more %} data-show-more{% endif %} data-collection-filter>
            <button type="button" class="collection__filter__title{% if heading_style == 'body' %} collection__filter__title--body{% endif %}{% if toggle_state %} is-expanded{% endif %}"
              aria-expanded="{{ toggle_state }}"
              aria-controls="CollectionFilter--{{ group | handle }}-{{ forloop.index }}"
              data-filter-active="{{ is_active }}"
              data-collapsible-trigger>
              <span>{{- group -}}{% if active_count > 0 %} ({{ active_count }}){% endif %}</span>

              <span class="collection__filter__count">
                {%- render 'icon-toggle-plus' -%}
                {%- render 'icon-toggle-minus' -%}
              </span>
            </button>

            <div id="CollectionFilter--{{ group | handle }}-{{ forloop.index }}"
              class="collection__filter-tags-wrapper{% if toggle_state %} is-expanded{% endif %}"
              aria-expanded="{% if toggle_state %}true{% else %}false{% endif %}"
              data-collapsible-container
              {% if toggle_state %}style="height:auto;"{% endif %}>
              <ul class="{{ filters_list_class }}" data-collapsible-content>
                {%- for tag in collection.all_tags -%}
                  {%- liquid
                    assign tag_parts = tag | split: '_'
                    assign group_tag = tag_parts.last

                    assign current_tag_handle = tag | replace: '&#39;', '' | replace: '&#34;', '' | handle

                    if current_tags contains tag
                      assign linked_tags = selected_tags | remove: current_tag_handle
                    else
                      assign linked_tags = selected_tags | append: '+' | append: current_tag_handle
                    endif

                    capture tag_link
                      echo collection.url
                      if linked_tags != blank
                        echo '/' | append: linked_tags
                      endif
                      echo sort_param
                    endcapture

                    assign tag_link = tag_link | replace: '/+', '/' | replace: '++', '+' | replace: '+?', '?'
                  -%}

                  {%- if tag_parts.first == group -%}
                    {%- liquid
                      capture filter_classes
                        echo 'collection__filter-tag'
                        if is_color
                          echo ' collection__filter-tag--swatch'
                        else
                          echo ' collection__filter-tag--default'
                        endif
                        if current_tags contains tag
                          echo ' is-active'
                        endif
                      endcapture
                    -%}

                    {%- capture current_filter -%}
                      <li class="{{ filter_classes }}" data-collection-filter-tag>
                        {%- if is_color -%}
                          <a href="{{ tag_link }}"
                            class="swatch__button swatch__button--{{ settings.color_swatches_product_style }} filter__button"
                            title="{{ group_tag }}"
                            data-value="{{ group_tag }}"
                            data-tag="{{ tag | handleize }}"
                            data-collection-filter-tag-button>
                            <div class="swatch__label" data-swatch="{{ group_tag | escape_once }}" data-tooltip="{{ group_tag | escape_once | capitalize }}">
                              <span class="icon icon-check"></span>
                            </div>
                          </a>
                          <span class="visually-hidden">{{ group_tag }}</span>
                        {%- else -%}
                          <a href="{{ tag_link }}"
                            class="filter__button filter__button--{{ group_tag | handle }}"
                            data-tag="{{ tag | handleize }}"
                            data-collection-filter-tag-button>
                            {{- group_tag -}}
                          </a>
                        {%- endif -%}
                      </li>
                    {%- endcapture -%}

                    {%- liquid
                      assign filters_counter = filters_counter | plus: 1
                      if filters_counter <= count_threshold
                        assign filters_markup_first_part = filters_markup_first_part | append: current_filter
                      else
                        assign filters_markup_the_rest = filters_markup_the_rest | append: current_filter
                        if current_tags contains tag
                          assign show_more_active_filters_counter = show_more_active_filters_counter | plus: 1
                        endif
                      endif
                    -%}

                    {%- if current_tags contains tag -%}
                      {%- capture active_tag_filters -%}
                        {{- active_tag_filters -}}
                        <a class="filter__active__remove" href="{{ tag_link }}" data-tag="{{ tag | handleize }}" data-filter-tag-reset-button>
                          {{ group_tag }}
                          <span class="filter__x">✕</span>
                        </a>
                      {%- endcapture -%}
                    {%- endif -%}
                  {%- endif -%}
                {%- endfor -%}

                {%- if show_more -%}
                  {{- filters_markup_first_part -}}

                  {%- if filters_markup_the_rest != '' -%}
                    {%- liquid
                      assign open_show_more = false
                      if show_more_active_filters_counter > 0
                        assign open_show_more = true
                      endif
                    -%}
                    <li class="collection__filter-actions" data-show-more-actions>
                      <div id="CollectionFilterActions--{{ group | handle }}-{{ forloop.index }}"
                        class="collection__filter-actions-container{% if open_show_more %} is-expanded{% endif %}"
                        data-collapsible-container
                        data-show-more-container
                        aria-expanded="{{ open_show_more }}"
                        {% if open_show_more %} style="height:auto;"{% endif %}>
                        <ul class="{{ filters_list_class }}" data-collapsible-content>
                          {{- filters_markup_the_rest -}}
                        </ul>
                      </div>

                      <button type="button"
                        class="collection__filters-more btn btn--text{% if open_show_more %} is-expanded{% endif %}"
                        aria-expanded="{{ open_show_more }}"
                        aria-controls="CollectionFilterActions--{{ group | handle }}-{{ forloop.index }}"
                        data-collapsible-trigger
                        data-show-more-trigger>
                        <span>{{ 'collection.filters.show_more' | t }}</span>
                        <span>{{ 'collection.filters.show_less' | t }}</span>
                      </button>
                    </li>
                  {%- endif -%}

                {%- else -%}
                 {{- filters_markup_first_part -}}
                 {{- filters_markup_the_rest -}}
                {%- endif -%}
              </ul>
            </div>
          </div>
        {%- endunless -%}
      {%- endfor -%}
  {%- endcase -%}
{%- endcapture -%}

{%- capture filter_reset_buttons -%}
  {%- if filter_mode == 'default' -%}
    {%- for filter in collection.filters -%}
      {%- if filter.type == 'price_range' -%}
        {%- if filter.min_value.value != nil or filter.max_value.value != nil -%}
          {%- if filter.min_value.value != 0 or filter.max_value.value != filter.range_max -%}
            {%- assign filter_count = filter_count | plus: 1 -%}
            <a class="filter__active__remove" href="{{ filter.url_to_remove }}" data-filter-reset-button>
              {%- liquid
                assign min_value = filter.min_value.value | default: 0
                assign max_value = filter.max_value.value | default: filter.range_max
                if settings.currency_code_enable
                  assign min_value = min_value | money_with_currency | remove: '.00' | remove: ',00'
                  assign max_value = max_value | money_with_currency | remove: '.00' | remove: ',00'
                else
                  assign min_value = min_value | money_without_trailing_zeros
                  assign max_value = max_value | money_without_trailing_zeros
                endif
              -%}
              {{ min_value }} - {{ max_value }}
              <span class="filter__x">✕</span>
            </a>
          {%- endif -%}
        {%- endif -%}
      {%- else -%}
        {%- for filter_value in filter.active_values -%}
          {%- assign filter_count = filter_count | plus: 1 -%}
          <a class="filter__active__remove" href="{{ filter_value.url_to_remove }}" data-filter-reset-button>
            {{ filter_value.label }}
            <span class="filter__x">✕</span>
          </a>
        {%- endfor -%}
      {%- endif -%}
    {%- endfor -%}
  {%- elsif filter_mode == 'tag' or filter_mode == 'group' -%}
    {%- assign filter_count = all_active_tags_count -%}
    {{- active_tag_filters -}}
  {%- endif -%}
{%- endcapture -%}

{%- if enable_sorting or enable_filters -%}
  <!-- By Joey Clarin - Custom Device Filter -->
  {% if collection.metafields.custom.filter_devices.value != blank%}
    {% assign cc_has_custom_device_filter = 'cc-has-custom-device-filter' %}
  {% endif %}
  
  <div class="collection__filters {{ cc_has_custom_device_filter }}" data-collection-filters>
   <div class="collection__filters-wrapper" data-collection-filters-wrapper>
      <div class="collection__filters-list">
        <div class="collection__filters-list__inner" data-collection-filters-list>

          <form data-collection-filters-form
            {% if animations_enabled %}
              data-aos="fade"
              data-aos-anchor="{{ animation_anchor }}"
              data-aos-delay="{{ animation_delay }}"
              {%- assign animation_delay = animation_delay | plus: 150 -%}
            {% endif %}>

            <div class="collection__filters-header">
              <button class="collection__filters__close" type="button" data-close-filters>
                <span class="visually-hidden">{{ 'products.general.close' | t }}</span>
                {%- render 'icon-close' -%}
              </button>

              {%- if enable_filters -%}
                <div class="collection__filters__top">
                  <div class="collection__filters__title{% if heading_style == 'body' %} collection__filters__title--body{% endif %}">
                    <span>{{- 'products.general.filters' | t -}}{% if filter_count > 0 %} ({{ filter_count }}){% endif %}</span>
                  </div>

                  <a href="{{ collection.url }}/{{ sort_param }}" class="collection__filters__reset {% if current_tags != blank or filter_count > 0 %} is-visible{% endif %}" data-filter-reset-button>
                    {{- 'products.general.clear_filters' | t -}}
                  </a>
                </div>

                <div class="collection__filters__clear" data-filters-reset>
                  {{- filter_reset_buttons -}}
                </div>

                <hr class="hr--full collection__filters__line">
              {%- endif -%}
            </div>

            {%- if enable_sorting -%}          {%- assign sort_by = search.sort_by | default: collection.sort_by | default: collection.default_sort_by -%}
          {%- assign sort_options = search.sort_options | default: collection.sort_options -%}

          <div class="collection__sort">
            <button type="button" class="collection__sort__label{% if heading_style == 'body' %} collection__sort__label--body{% endif %}" aria-expanded="false" aria-controls="CollectionSorting" data-collapsible-trigger>
              {{ 'collections.sorting.title' | t }}
              {%- render 'icon-toggle-plus' -%}
              {%- render 'icon-toggle-minus' -%}
            </button>

            <div id="CollectionSorting"
              class="collection__sort__option-wrapper"
              aria-expanded="false"
              data-collapsible-container>
              <div class="collection__sort__options" data-collapsible-content>
                <ul class="collection__filter-tags collection__filter-tags--default" collection-sort-by="{{ sort_by }}">
                  {%- for option in sort_options -%}
                    <li class="collection__filter-tag">
                      <input class="collection__sort__input" type="radio" name="sort_by" value="{{ option.value }}" id="filter-{{ option.name | handle | append: option.value | handle | append: section.id }}" data-input-sort{% if option.value == sort_by %} checked{% endif %}>
                      <label class="collection__sort__button" for="filter-{{ option.name | handle | append: option.value | handle | append: section.id }}">
                        {{- option.name -}}
                      </label>
                    </li>
                  {%- endfor -%}
                </ul>

                <noscript>
                  <button type="submit" class="btn btn--primary btn--solid">{{ 'collection.filters.sort_button' | t }}</button>
                </noscript>
              </div>
            </div>
          </div>{%- endif -%}

            {%- if enable_filters and filters_available -%}
              {{- filters -}}
            {%- endif -%}
          </form>
        </div>

        {%- if enable_filters -%}
          <div class="collection__filters-bottom{% if current_tags != blank or filter_count > 0 %} is-visible{% endif %}">
            <button class="collection__filters__close-bottom btn btn--primary" type="button" data-close-filters>
              {{- 'collection.filters.close' | t -}}
            </button>
          </div>
        {%- endif -%}
      </div>
    </div>
  </div>
{%- endif -%}{%- endif -%}
        {%- endif -%}

        {%- paginate collection.products by pagination_limit -%}{%- assign promos_array = '' -%}

{%- if paginate.current_page == 1 -%}
  {%- for block in section.blocks -%}
    {%- capture current_promo -%}
      {%- liquid
        assign block_id = 'CollectionPromo--' | append: block.id
        assign promo_collection = block.settings.collection
        assign promo_position = block.settings.position
        assign promo_width = block.settings.width
        assign promo_width_class = 'collection-promo--two-columns'
        assign promo_order = promo_position | append: '-' | append: forloop.index

        if promo_position < 10
          assign promo_order = promo_order | prepend: '0'
        endif

        case promo_width
          when 'full'
            assign promo_width_class = 'collection-promo--full'
            assign current_promo_width = columns
          when 'half'
            assign current_promo_width = 2
          when 'auto'
            assign promo_width_class = 'collection-promo--one-column'
            assign promo_height = settings.image_aspect_ratio | times: 100
            assign current_promo_width = 1
        endcase
      -%}
{%- liquid
  assign promo_bg_color = block.settings.bg_color
  assign promo_image = block.settings.image
  assign title = block.settings.title
  assign heading_highlight_type = block.settings.heading_highlight_type
  assign highlight_color = block.settings.highlight_color
  assign promo_heading_size = block.settings.heading_size | times: 0.01
  assign promo_text_size = block.settings.text_size | times: 0.01
  assign promo_content = block.settings.content | strip_html
  assign promo_layout = block.settings.layout
  assign promo_btn_text = block.settings.button_text | strip_html
  assign promo_btn_link = block.settings.button_link
  assign promo_button_style = block.settings.button_style
  assign promo_button_size = block.settings.button_size
  assign promo_button_color = block.settings.button_color
  assign promo_text_color = block.settings.text_color
  assign overlay_opacity = block.settings.overlay_opacity | times: 0.01
  assign promo_height = settings.image_aspect_ratio | times: 100
  assign show_text_shadow = settings.show_text_shadow
  assign block_class = 'collection-promo__inner'
  assign block_id = 'CollectionPromo--' | append: block.id
  assign block_selector_id = '#' | append: block_id
  assign animation_delay = 150
  assign animation_anchor = block_selector_id

  assign block_class = block_class | append: ' ' | append: promo_text_color

  if promo_image != blank
    assign block_class = block_class | append: ' collection-promo--image'
  endif

  assign whole_link = false
  if promo_btn_text == blank and promo_btn_link != blank
    assign whole_link = true
    assign block_class = block_class | append: ' collection-promo--outer-link'
  endif

  capture content_position_class
    case block.settings.text_position
      when 'left'
        echo 'item--left'
      when 'center'
        echo 'item--center'
      when 'right'
        echo 'item--right'
      when 'bottom-left'
        echo 'item--bottom-left'
      when 'bottom-right'
        echo 'item--bottom-right'
      when 'top-left'
        echo 'item--top-left'
      when 'top-right'
        echo 'item--top-right'
    endcase
  endcapture

  assign block_class = block_class | append: ' ' | append: content_position_class

  capture promo_layout_class
    case promo_layout
      when 'inline'
        echo 'collection-promo__content--inline'
      when 'stacked'
        echo 'collection-promo__content--stacked'
    endcase
  endcapture
-%}{% comment %}
  Enhanced text decorations options - Liqiud variables

  Dependencies:
    - Title liquid object from settings: `assign title = section.settings.title`
    - Highlight type from settings: `assign heading_highlight_type = section.settings.heading_highlight_type`
    - Highlight color from settings: `assign highlight_color = section.settings.highlight_color or assign highlight_color = block.settings.highlight_color`
    - SVG icons:
      - icon-squiggle.svg (assets)
      - icon-circle.liquid (snippet)
{% endcomment %}

{%- liquid
  comment
   Highlighted words count
  endcomment
  assign title_temp = title | split: '<em>'
  assign em_arr = ''
  if title_temp.size > 1
    for text_part in title_temp offset: 1
      assign em_text = text_part | split: '</em>' | first
      assign em_arr = em_arr | append: '#separator#' | append: em_text
    endfor
  endif
  assign em_arr = em_arr | split: '#separator#'
  assign words_count_arr = ''
  assign letters_count_arr = ''
  if em_arr.size > 0
    for words in em_arr offset: 1
      assign word = words | split: ' '
      assign words_count_arr = words_count_arr | append: word.size | append: ', '
      assign letters_count_arr = letters_count_arr | append: words.size | append: ', '
    endfor
  endif

  assign words_count_arr = words_count_arr | replace_last: ', ', '' | split: ', '
  assign letters_count_arr = letters_count_arr | replace_last: ', ', '' | split: ', '

  comment
   Main highlight types logic
  endcomment
  assign icon_url = ''
  assign icon_color = 'var(--text)'

  if highlight_color != 'rgba(0,0,0,0)' and highlight_color != ''
    assign icon_color = highlight_color
  endif

  capture text_highlight_icon
    assign has_text_highlight = false

    if title contains '<em>'
      case heading_highlight_type
        when 'squiggle'
          assign icon_url = 'icon-squiggle.svg' | asset_url
          echo '<span class="text-highlight__icon"></span>'
        when 'circle'
          echo '<span class="text-highlight__icon">'
          render 'icon-circle', color: icon_color
          echo '</span>'
        when 'stroke' or 'circle' or 'squiggle' or 'highlight' or 'highlight-color' or 'underline'
          assign has_text_highlight = true
      endcase
    endif
  endcapture

  capture icon_bg
    if icon_url != ''
      echo 'url( "' | append: icon_url | append: '" )'
    else
      echo 'none'
    endif
  endcapture
  capture icon_styles
    assign icon_bg = icon_bg | replace: '"', "'"
    echo 'style="--icon-url: ' | append: icon_bg | append: ';' | append: '--icon-color: ' | append: icon_color | append: ';"'
  endcapture

  assign text_highlight_wrapper_class = 'text-highlight-wrapper' | append: ' text-highlight-wrapper--' | append: heading_highlight_type
  capture text_highlight_start
    echo '<span class="text-highlight" ' | append: icon_styles | append: '>'
  endcapture
  capture text_highlight_end
    echo text_highlight_icon
    echo '</span>'
  endcapture

  if title != blank and title contains '<em>'
    case heading_highlight_type
      when 'squiggle' or 'circle' or 'stroke' or 'highlight' or 'highlight-color' or 'underline'
        assign title = title | replace: '<em>', text_highlight_start | replace: '</em>', text_highlight_end

      when 'circle'
        comment
          Update icon's holder class based on the italicised words count
        endcomment
        assign title = title | split: 'class="text-highlight"'
        assign title_mod = ''
        for title_part in title offset: 1
          assign current_part = title_part

          if title_part contains 'text-highlight__icon'
            capture highlight_icon_classes
              echo 'text-highlight__icon'
              assign current_count = words_count_arr[forloop.index0] | times: 1
              assign letters_count = letters_count_arr[forloop.index0] | times: 1
              if current_count == 1
                echo ' text-highlight__icon--single-word'
              endif
              if letters_count < 6
                echo ' text-highlight__icon--short'
                echo ' text-highlight__icon--l' | append: letters_count
              endif
              if letters_count > 15
                echo ' text-highlight__icon--long'
              endif
            endcapture

            assign current_part = title_part | replace: 'text-highlight__icon', highlight_icon_classes
          endif

          unless forloop.last
            assign title_mod = title_mod | append: current_part | append: 'class="text-highlight"'
          else
            assign title_mod = title_mod | append: current_part
          endunless
        endfor
        assign title_first_part = title | first | append: 'class="text-highlight"'
        assign title_mod = title_mod | prepend: title_first_part
        assign title = title_mod
    endcase
  endif
-%}{%- style -%}
  {{ block_selector_id }} {
    --overlay-opacity: {{ overlay_opacity }};
    --adjust-heading: calc(var(--FONT-ADJUST-HEADING) * {{ promo_heading_size }});
    --adjust-body: calc(var(--FONT-ADJUST-BODY) * {{ promo_text_size }});
    --promo-height: {{ promo_height }}%;

    {%- if promo_bg_color != 'rgba(0,0,0,0)' and promo_bg_color != '' and promo_image == blank -%}
      --bg: {{ promo_bg_color }};
    {%- endif -%}
  }

  {{ block_selector_id }} .collection-promo__heading {
    {%- if heading_highlight_type != 'highlight' -%}
      --highlight-color: var(--text);
    {%- endif -%}

    {%- if highlight_color != 'rgba(0,0,0,0)' and highlight_color != '' -%}
      --highlight-color: {{ highlight_color }};
    {%- endif -%}
  }
{%- endstyle -%}

<div class="{{ block_class }}" {{ block.shopify_attributes }}>
  {%- if whole_link -%}
    <a class="collection-promo__link" href="{{ promo_btn_link }}">
        <span class="visually-hidden">{{ title | strip_html | strip }}</span>
    </a>
  {%- endif -%}

  <div class="collection-promo__bg">
    {%- if promo_image != blank -%}
      {%- render 'image-fill', is_background: true, img_object: promo_image, classes: 'collection-promo__image' -%}
    {%- endif -%}
  </div>

  {%- if promo_image != blank -%}
    <div class="overlay"></div>
  {%- endif -%}

  <div class="collection-promo__content {{ promo_layout_class }}{% if show_text_shadow and promo_image != blank %} backdrop--radial{% endif %}">
    <div class="collection-promo__body">
      {%- if title != blank -%}

        {%- liquid
          assign title = title | replace: '%', '<sup>%</sup>'
          assign title = title | replace: '<sup>%</sup> off', '<sup>%</sup> <small>off</small>'
          assign title = title | replace: '<sup>%</sup> OFF', '<sup>%</sup> <small>OFF</small>'
          assign title = title | replace: '<sup>%</sup> Off', '<sup>%</sup> <small>Off</small>'
        -%}

        <h3 class="collection-promo__heading{% if has_text_highlight %} {{ text_highlight_wrapper_class }}{% endif %}"
          {% if settings.animations_enabled %}
            data-aos="fade-up"
            data-aos-anchor="{{ animation_anchor }}"
            data-aos-delay="{{ animation_delay }}"
            {%- assign animation_delay = animation_delay | plus: 150 -%}
          {% endif %}>
          {%- render 'title-with-highlights',
            title: title,
            heading_highlight_type: heading_highlight_type,
            highlight_color: highlight_color,
            has_text_highlight: has_text_highlight
          -%}
        </h3>
      {%- endif -%}

      {%- if promo_content != blank -%}
        <div class="collection-promo__text"
          {% if settings.animations_enabled %}
            data-aos="fade-up"
            data-aos-anchor="{{ animation_anchor }}"
            data-aos-delay="{{ animation_delay }}"
            {%- assign animation_delay = animation_delay | plus: 150 -%}
          {% endif %}>
          {{- promo_content -}}
        </div>
      {%- endif -%}

      {%- if promo_btn_text != blank -%}
        <div class="collection-promo__button"
          {% if settings.animations_enabled %}
            data-aos="fade-up"
            data-aos-anchor="{{ animation_anchor }}"
            data-aos-delay="{{ animation_delay }}"
            {%- assign animation_delay = animation_delay | plus: 150 -%}
          {% endif %}>
          <a class="btn {{ promo_button_style }} {{ promo_button_size }} {{ promo_button_color }}" href="{{ promo_btn_link }}">{{ promo_btn_text }}</a>
        </div>
      {%- endif -%}
    </div>
  </div>
</div>
{%- endcapture -%}

    {%- assign promos_array = promos_array | append: promo_order | append: '#promo_position#' | append: promo_position | append: '#promo_html#' | append: current_promo | append: '#block_id#' | append: block_id | append: '#promo_collection#' | append: promo_collection | append: '#promo_width#' | append: current_promo_width | append: '#promo_width_class#' | append: promo_width_class | append: '@@' -%}
  {%- endfor -%}

  {%- assign promos_array = promos_array | split: '@@' | sort -%}
{%- endif -%}<div class="collection__products collection-items--{{ columns }} collection-items--{{ size_mobile }}" data-collection-products>
            {%- if collection_count > 0 -%}
              {%- if collection.products_count > 0 -%}
                <div class="grid"{% if enable_infinity_scroll %} id="AjaxinateLoop" data-ajaxinate-id="{{ section.id }}"{% endif %}>
                  {%- assign tablet_counter = 1 -%}
                  {%- assign mobile_counter = 1 -%}

                  {%- if promos_array.size > 0 -%}
                    {%- liquid
                      assign counter_grid = 1
                      assign counter_delay = 0
                      assign added_promos_index = ''
                      assign items_on_row_remaining = columns
                    -%}

                    {%- for product in collection.products -%}{%- for promo in promos_array -%}
  {%- liquid
    if promo == ''
      continue
    endif

    assign promo_index = forloop.index
    assign current_promo_markup = promo | split: '#promo_html#' | last | split: '#block_id#' | first
    assign block_id = promo | split: '#block_id#' | last | split: '#promo_collection#' | first
    assign promo_collection = promo | split: '#promo_collection#' | last | split: '#promo_width#' | first
    assign promo_position = promo | split: '#promo_position#' | last | split: '#promo_html#' | first | times: 1
    assign promo_width = promo | split: '#promo_width#' | last | split: '#promo_width_class#' | first | times: 1
    assign promo_width_class = promo | split: '#promo_width_class#' | last
    assign promo_index_tag = '@' | append: promo_index | append: '@'
    assign block_class = 'collection-promo' | append: ' ' | append: promo_width_class
    assign block_tablet_class = ''
    assign promo_tablet_class = 'collection-promo--'
    assign tablet_class = 'tablet-grid'
    assign tablet_even_class = tablet_class | append: ' collection-promo--grid-even'
    assign tablet_second_class = ' collection-promo--grid-second'
    assign tablet_third_class = ' collection-promo--grid-third'
    assign tablet_full_class = 'tablet-full'
    assign animation_delay = counter_delay | modulo: columns | times: 1

    if carousel
      assign block_class = block_class | append: ' carousel__item'

      case columns
        when 2
          assign block_class = block_class | append: ' one-half'
        when 3
          assign block_class = block_class | append: ' one-third'
        when 4
          assign block_class = block_class | append: ' one-quarter'
      endcase
    else
      assign block_class = block_class | append: ' grid__item'
    endif
  -%}

  {%- if promo_position <= counter_grid -%}
    {%- unless added_promos_index contains promo_index_tag -%}
      {%- if promo_collection == empty or promo_collection == collection.handle -%}
        {%- liquid
          if items_on_row_remaining < promo_width
            assign animation_delay = 0
            assign counter_delay = 0
            assign items_on_row_remaining = columns
          endif

          assign promo_even = mobile_counter | modulo: 2
          assign promo_second = tablet_counter | plus: 1 | modulo: 3
          assign promo_third = tablet_counter | modulo: 3
          assign counter_grid = counter_grid | plus: promo_width
          assign items_on_row_remaining = items_on_row_remaining | minus: promo_width
          assign counter_delay = counter_delay | plus: promo_width
          assign block_tablet_class = tablet_class

          case promo_width
            when 1
              if promo_even == 0
                assign block_tablet_class = tablet_even_class
              endif

              if columns > 2
                if promo_second == 0
                  assign block_tablet_class = block_tablet_class | append: tablet_second_class
                elsif promo_third == 0
                  assign block_tablet_class = block_tablet_class | append: tablet_third_class
                endif
              endif

              assign tablet_counter = tablet_counter | plus: 1
              assign mobile_counter = mobile_counter | plus: 1

            when columns
              assign counter_delay = 0
              assign items_on_row_remaining = columns

            when 2 or columns
              assign counter_increase_mobile = 2
              assign block_tablet_class = tablet_full_class

              if promo_even == 0
                assign counter_increase_mobile = 1
                assign block_tablet_class = tablet_even_class
              endif

              if columns > 2
                if promo_second == 0
                  assign counter_increase_tablet = 2
                  assign block_tablet_class = block_tablet_class | append: tablet_second_class
                elsif promo_third == 0
                  assign counter_increase_tablet = 1
                  assign block_tablet_class = block_tablet_class | append: tablet_third_class
                else
                  if promo_width == 2
                    assign counter_increase_tablet = 2
                  else
                    assign counter_increase_tablet = 3
                  endif
                endif
              endif

              assign tablet_counter = tablet_counter | plus: counter_increase_tablet
              assign mobile_counter = mobile_counter | plus: counter_increase_mobile
          endcase

          assign promo_tablet_class = promo_tablet_class | append: block_tablet_class
          assign added_promos_index = added_promos_index | append: '@' | append: promo_index | append: '@#'
        -%}
        <div id="{{ block_id }}"
          class="{{ block_class }} {{ promo_tablet_class }}"
          {% if carousel %} data-slide{% endif %}
          {% if animations_enabled %}
            data-aos="fade"
            data-aos-delay="{{ animation_delay | times: 150 }}"
          {% endif %}
          data-promo>
          {{ current_promo_markup }}
        </div>
      {%- endif -%}
    {%- endunless -%}
  {%- endif -%}

  {%- liquid
    assign mod = counter_delay | modulo: columns
    if mod < 1
      assign items_on_row_remaining = columns
      assign counter_delay = 0
    endif
  -%}
{%- endfor -%}

{%- liquid
  assign animation_delay = counter_delay | modulo: columns | times: 1
  assign counter_delay = counter_delay | plus: 1
  assign counter_grid = counter_grid | plus: 1
  assign items_on_row_remaining = items_on_row_remaining | minus: 1

  if collection
    render 'product-grid-item', product: product, animation_delay: animation_delay, tablet_counter: tablet_counter, mobile_counter: mobile_counter, carousel: carousel
  else
    render 'product-grid-item--onboarding', columns_mobile: columns_mobile, carousel: carousel, index: index, animation_delay: animation_delay
  endif

  assign tablet_counter = tablet_counter | plus: 1
  assign mobile_counter = mobile_counter | plus: 1

  assign mod = counter_delay | modulo: columns
  if mod < 1
    assign items_on_row_remaining = columns
    assign counter_delay = 0
  endif
-%}{%- endfor -%}
                  {%- else -%}
                    {%- liquid
                      for product in collection.products
                        assign animation_delay = forloop.index0 | modulo: columns | times: 1
                        render 'product-grid-item', product: product, animation_delay: animation_delay, tablet_counter: tablet_counter, mobile_counter: mobile_counter
                        assign tablet_counter = tablet_counter | plus: 1
                        assign mobile_counter = mobile_counter | plus: 1
                      endfor
                    -%}
                  {%- endif -%}
                </div>
              {%- else -%}
                <div class="collection--no-results">
                  <p class="no-matches">{{ 'collections.general.no_matches_by_filter' | t : products_count: collection.products_count }}</p>
                </div>
              {%- endif -%}

            {%- elsif collection.handle != 'all' and collection_count == 0 -%}
              <div class="collection--no-results">
                <p class="no-matches">{{ 'collections.general.no_matches' | t }}</p>
                <a href="{{ routes.root_url }}" class="btn btn--primary btn--solid">{{ 'general.404.button_text' | t }}</a>
              </div>
            {%- endif -%}

            {%- if enable_infinity_scroll -%}
              <div class="pagination pagination--infinite" id="AjaxinatePagination" data-ajaxinate-id="{{ section.id }}">
                {%- if paginate.next -%}
                  <div class="pagination__loading">
                    <a href="{{ paginate.next.url }}">
                      <span class="visually-hidden">{{ 'general.pagination.next' | t }}</span>
                    </a>
                  </div>
                {%- endif -%}
              </div>

              {%- if paginate.pages > 1 -%}
                <noscript>
                  {%- render 'pagination', paginate: paginate -%}
                </noscript>
              {%- endif -%}

            {%- else -%}
              {%- if paginate.pages > 1 -%}
                {%- render 'pagination', paginate: paginate -%}
              {%- endif -%}
            {%- endif -%}
          </div>
        {%- endpaginate -%}
      </div>
    </div>
  </div>
</div>

{% schema %}
  {
    "name": "Collection pages",
    "class": "collection-section",
    "settings": [
      {
        "type": "header",
        "content": "Layout"
      },
      {
        "type": "checkbox",
        "id": "show_breadcrumbs",
        "label": "Show breadcrumbs",
        "default": true
      },
      {
        "type": "header",
        "content": "Filters and sorting"
      },
      {
        "type": "checkbox",
        "id": "enable_sorting",
        "label": "Enable sorting",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "enable_filters",
        "label": "Enable filters",
        "default": true
      },
      {
        "type": "select",
        "label": "Default filter layout",
        "id": "filters_layout",
        "info": "Desktop only",
        "default": "open",
        "options": [
          { "label": "All filters open", "value": "open" },
          { "label": "All filters closed", "value": "closed" },
          { "label": "First filter open", "value": "first-open" }
        ]
      },
      {
        "type": "checkbox",
        "id": "show_more",
        "label": "Show a subset of filters from each group",
        "info": "Check this setting if you have a large number of filters, and want them to take up less space",
        "default": true
      },
      {
        "type": "select",
        "label": "Filter mode",
        "id": "filter_mode",
        "info": "Filters by group requires specific tag formatting. [Learn more](https://presidiocreative.com/link/palo-alto/docs/collection-filtering)",
        "default": "default",
        "options": [
          { "label": "Default (Faceted)", "value": "default" },
          { "label": "By tag", "value": "tag" },
          { "label": "By group", "value": "group" }
        ]
      },
      {
        "type": "select",
        "label": "Filters heading style",
        "id": "heading_style",
        "default": "body",
        "options": [
          { "label": "Heading", "value": "heading" },
          { "label": "Body", "value": "body" }
        ]
      },
      {
        "type": "header",
        "content": "Colors"
      },
      {
        "type": "color",
        "id": "bg_color",
        "label": "Background"
      },
      {
        "type": "header",
        "content": "Section spacing"
      },
      {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Padding top",
        "default": 30
      },
      {
        "type": "range",
        "id": "padding_bottom",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Padding bottom",
        "default": 60
      }
    ],
    "blocks": [
      {
        "type": "promo",
        "name": "Promo",
        "limit": 5,
        "settings": [
          {
            "type": "collection",
            "id": "collection",
            "label": "Collection",
            "info": "Show on specific collection only"
          },
          {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
          },
          {
            "type": "header",
            "content": "Layout"
          },
          {
            "type": "range",
            "id": "position",
            "label": "Show in position",
            "min": 1,
            "max": 48,
            "step": 1,
            "default": 1
          },
          {
            "type": "select",
            "id": "width",
            "label": "Width",
            "default": "auto",
            "options": [
              { "value": "full", "label": "Full width" },
              { "value": "half", "label": "2 grid items" },
              { "value": "auto", "label": "Grid item" }
            ]
          },
          {
            "type": "header",
            "content": "Text"
          },
          {
            "type": "richtext",
            "id": "title",
            "label": "Heading",
            "default": "<p>Promotion title</p>",
            "info": "Highlight one or two key words in your heading by italicizing them, then choose the highlight option below"
          },
          {
            "type": "select",
            "id": "heading_highlight_type",
            "label": "Highlight type",
            "default": "circle",
            "options": [
              { "value": "italics", "label": "Italics (no decoration)" },
              { "value": "highlight", "label": "Highlight" },
              { "value": "highlight-color", "label": "Text color" },
              { "value": "underline", "label": "Underline" },
              { "value": "squiggle", "label": "Squiggle" },
              { "value": "circle", "label": "Circle" },
              { "value": "stroke", "label": "Stroke (outlined text)" }
            ]
          },
          {
            "type": "color",
            "id": "highlight_color",
            "label": "Highlight color",
            "default": "#D43747"
          },
          {
            "type": "range",
            "id": "heading_size",
            "label": "Heading size",
            "default": 100,
            "min": 100,
            "max": 200,
            "step": 10,
            "unit": "%"
          },
          {
            "type": "textarea",
            "id": "content",
            "label": "Text",
            "default": "Advertise a promotion or a sale"
          },
          {
            "type": "range",
            "id": "text_size",
            "label": "Text size",
            "default": 100,
            "min": 100,
            "max": 200,
            "step": 5,
            "unit": "%"
          },
          {
            "type": "select",
            "id": "text_color",
            "label": "Text color",
            "default": "text-light",
            "options": [
              {
                "value": "text-light",
                "label": "Light"
              },
              {
                "value": "text-dark",
                "label": "Dark"
              }
            ]
          },
          {
            "type": "select",
            "id": "text_position",
            "label": "Content position",
            "default": "center",
            "options": [
              { "value": "left", "label": "Left" },
              { "value": "center", "label": "Center" },
              { "value": "right", "label": "Right" },
              { "value": "bottom-left", "label": "Bottom left" },
              { "value": "bottom-right", "label": "Bottom right" },
              { "value": "top-left", "label": "Top left" },
              { "value": "top-right", "label": "Top right" }
            ]
          },
          {
            "type": "select",
            "id": "layout",
            "label": "Content layout",
            "default": "stacked",
            "options": [
              { "label": "Inline", "value": "inline" },
              { "label": "Stacked", "value": "stacked" }
            ],
            "info": "The 'Inline' option only applies on desktop when the promo width is 'Full width'"
          },
          {
            "type": "range",
            "id": "overlay_opacity",
            "label": "Text contrast",
            "info": "Improves readability of text",
            "min": 0,
            "max": 95,
            "step": 5,
            "unit": "%",
            "default": 10
          },
          {
            "type": "color",
            "id": "bg_color",
            "label": "Background color",
            "default": "#D3D3D3",
            "info": "Applies if no image is chosen"
          },
          {
            "type": "header",
            "content": "Button"
          },
          {
            "type": "text",
            "id": "button_text",
            "label": "Button text",
            "info": "Leave blank to link entire image"
          },
          {
            "type": "url",
            "id": "button_link",
            "label": "Button URL"
          },
          {
            "type": "select",
            "id": "button_color",
            "label": "Button color",
            "default": "btn--white",
            "options": [
              { "label": "Primary", "value": "btn--primary" },
              { "label": "Secondary", "value": "btn--secondary" },
              { "label": "White", "value": "btn--white" },
              { "label": "Black", "value": "btn--black" }
            ]
          },
          {
            "type": "select",
            "id": "button_style",
            "label": "Button style",
            "default": "btn--solid-border",
            "options": [
              { "label": "Solid", "value": "btn--solid" },
              { "label": "Outline", "value": "btn--outline" },
              { "label": "Solid with border", "value": "btn--solid-border" },
              { "label": "Text", "value": "btn--text" }
            ]
          },
          {
            "type": "select",
            "id": "button_size",
            "label": "Size",
            "default": "btn--small",
            "options": [
              { "label": "Large", "value": "btn--large" },
              { "label": "Medium", "value": "btn--medium" },
              { "label": "Small", "value": "btn--small" }
            ]
          }
        ]
      }
    ]
  }
{% endschema %}