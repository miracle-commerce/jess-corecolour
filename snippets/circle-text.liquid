{%- comment -%}
    Renders a rotating circle text element

    Accepts:
    - unique_id: {String} You must pass a unique id (required)
    - show: {Boolean} Shows the circle element. Default: true
    - hide_on_mobile: {Boolean} Hides the element on mobile. Default: false
    - text: {String} text (required)
    - color: {Color} Hex code for text (required)
    - image: {Object} Image to replace the stamp
    - rotate_animation: {String} Turn the animation on/off or choose to animate it on scroll. Accepts 'none', 'rotate' and 'rotate-on-scroll' values
    - size: {Number} Changes the size of the circle. Default: 150
    - word_spacing: {Number} Changes the word-spacing of the text. Default: 3

    Usage:
    {% render 'circle-text', unique_id: unique_id, show: true, hide_on_mobile: hide_on_mobile, text: text, color: color, image: image, rotate_animation: rotate_animation, size: size, word_spacing: word_spacing %}
{%- endcomment -%}

{%- liquid
  assign rotate_animation = rotate_animation | default: 'none'
  assign size = size | default: 150
  assign retina_size = size | times: 2
  assign word_spacing = word_spacing | default: 3

  capture styles
    echo '--circle-size: ' | append: size | append: 'px; '
    echo '--circle-color: ' | append: color | append: '; '

    if image == blank
      echo '--circle-word-spacing: ' | append: word_spacing | append: 'px;'
    endif
  endcapture

  capture classes
    if hide_on_mobile
      echo ' hidden-sm'
    endif

    if rotate_animation == 'none' and image == blank
      echo ' is-static-text'
    elsif rotate_animation == 'rotate'
      echo ' is-rotating'
    elsif rotate_animation == 'rotate-on-scroll'
      echo ' is-rotating-on-scroll'
    endif
  endcapture
-%}

{%- unless show == false -%}
  {%- if image != blank or text != blank -%}
    <div
      class="circle-text{{ classes }}"
      style="{{ styles }}"
      data-circle-text
      {% if rotate_animation == 'rotate-on-scroll' %}
        data-circle-text-parallax
      {% endif %}
    >
      <div class="circle-text__content">
        {%- if image != blank -%}
          {%- liquid
            assign image_widths = '190, 400, 540, 720'
            assign image_alt = image.alt | escape
          -%}

          {%- render 'image', image: image, width: retina_size, widths: image_widths, alt: image_alt -%}
        {%- else -%}
          <svg viewBox="0 0 100 100">
            <defs>
              <path id="circle-text-{{- unique_id -}}" d="
                M 15, 50
                a 35,35 0 1,1 70,0
                a 35,35 0 1,1 -70,0
              "></path>
            </defs>

            <text dy="0" dx="0" fill="currentColor">
              <textPath xlink:href="#circle-text-{{- unique_id -}}">
                {{- text -}}
              </textPath>
            </text>
          </svg>
        {%- endif -%}
      </div>
    </div>
  {%- endif -%}
{%- endunless -%}
